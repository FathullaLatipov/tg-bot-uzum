import telebot
import buttons
import database
import openpyxl
import datetime
from dotenv import load_dotenv
import os
from telebot.types import ReplyKeyboardRemove

load_dotenv()

bot = telebot.TeleBot(os.getenv('KEY'))

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É Excel
excel_file_path = 'user_data.xlsx'

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞
last_report_sent_file = 'last_report_sent.txt'


@bot.message_handler(commands=['start', 'promokod'])
def start(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Tilni tanlang", reply_markup=buttons.language_kb())
    bot.register_next_step_handler(message, poluchit_promokod)


def poluchit_promokod(message):
    user_id = message.from_user.id
    if message.text == "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫":
        bot.send_message(user_id, '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥"',
                         reply_markup=buttons.promokod())
        bot.register_next_step_handler(message, register_user)
    elif message.text == "O'zbek tili":
        bot.send_message(user_id, 'Promo-kodni olish uchun ‚ÄúPromo-kodni olish‚Äù tugmasini bosing.',
                         reply_markup=buttons.promokod_uz())
        bot.register_next_step_handler(message, register_user_uz)
    else:
        bot.register_next_step_handler(message, start)


def register_user(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞", reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(message, send_image1)


def send_image1(message):
    user_id = message.from_user.id
    if message.photo:
        photo1 = message.photo[-1].file_id
        bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –æ—Ç–∑—ã–≤–∞ —Å –æ—Ü–µ–Ω–∫–∞ 5 –∑–≤—ë–∑–¥ –Ω–∞ —Ç–æ–≤–∞—Ä")
        bot.register_next_step_handler(message, send_image2, photo1)
    else:
        bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∞ –Ω–µ —Ñ–∞–π–ª –∏–ª–∏ —Ç–µ–∫—Å—Ç")
        bot.register_next_step_handler(message, send_image1)


def send_image2(message, photo1):
    user_id = message.from_user.id
    name = message.from_user.username

    save_user_to_excel(user_id, name)
    if message.photo:
        photo2 = message.photo[-1].file_id
        photos = [telebot.types.InputMediaPhoto(photo1), telebot.types.InputMediaPhoto(photo2)]
        bot.send_message(user_id, "–£—Å–ø–µ—à–Ω–æ! –ú—ã –ø—Ä–∏—à–ª—ë–º –ø—Ä–æ–º–æ–∫–æ–¥  –≤ —Ç–µ—á–µ–Ω–∏–∏ —Ç—Ä—ë—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π",
                         reply_markup=ReplyKeyboardRemove())
        bot.send_media_group(-4013840171, media=photos)
        bot.send_message(-4013840171, f"<b>–ò–º—è</b>: {name}\n"
                                      f"<b>ID</b>: {user_id}\n"
                                      f"<b>–Ø–∑—ã–∫</b>: —Ä—É—Å—Å–∫–∏–π",
                         parse_mode="html", reply_markup=buttons.promo_call(user_id))
    else:
        bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∞ –Ω–µ —Ñ–∞–π–ª –∏–ª–∏ —Ç–µ–∫—Å—Ç")
        bot.register_next_step_handler(message, send_image2_uz, photo1)


def register_user_uz(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "Buyurtmangizning fotosuratini yuboring", reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(message, send_image1_uz)


def send_image1_uz(message):
    user_id = message.from_user.id
    if message.photo:
        photo1 = message.photo[-1].file_id
        bot.send_message(user_id, "Mahsulot uchun 5 yulduzli reyting bilan fotosurat sharhini yuboring")
        bot.register_next_step_handler(message, send_image2_uz, photo1)
    else:
        bot.send_message(user_id, "Fayl yoki matn emas, faqat fotosurat yuboring")
        bot.register_next_step_handler(message, send_image1_uz)


def send_image2_uz(message, photo1):
    user_id = message.from_user.id
    name = message.from_user.username

    save_user_to_excel(user_id, name)
    if message.photo:
        photo2 = message.photo[-1].file_id
        photos = [telebot.types.InputMediaPhoto(photo1), telebot.types.InputMediaPhoto(photo2)]
        bot.send_message(user_id, "Muvaffaqiyatli! Biz uch ish kuni ichida reklama kodini yuboramiz",
                         reply_markup=ReplyKeyboardRemove())
        bot.send_media_group(-4013840171, media=photos)
        bot.send_message(-4013840171, f"<b>–ò–º—è</b>: {name}\n"
                                      f"<b>ID</b>: {user_id}\n"
                                      f"<b>–Ø–∑—ã–∫</b>: —É–∑–±–µ–∫—Å–∫–∏–π",
                         parse_mode="html", reply_markup=buttons.promo_call(user_id))
    else:
        bot.send_message(user_id, "Fayl yoki matn emas, faqat fotosurat yuboring")
        bot.register_next_step_handler(message, send_image2_uz, photo1)


def send_promo(message, user_id, admin_id):
    if message.from_user.id == admin_id:
        if message.text == "‚ùå–û—Ç–º–µ–Ω–∞":
            bot.send_message(-4013840171, f"{user_id} –Ω–µ –ø–æ–ª—É—á–∏–ª –ø—Ä–æ–º–æ–∫–æ–¥ ‚ùå")
        else:
            try:
                bot.send_message(user_id, message.text)
                bot.send_message(-4013840171, f"{user_id} –ø–æ–ª—É—á–∏–ª –ø—Ä–æ–º–æ–∫–æ–¥‚úÖ")
            except:
                bot.send_message(-4013840171, f"{user_id} –Ω–µ –ø–æ–ª—É—á–∏–ª –ø—Ä–æ–º–æ–∫–æ–¥ ‚ùå")


@bot.callback_query_handler(func=lambda call: True)
def promo(call):
    user_id = int(call.data)
    admin_id = call.from_user.id
    bot.send_message(-4013840171,
                     f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —é–∑–µ—Ä–∞ —Å –∞–π–¥–∏: {user_id}. –î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã",
                     reply_markup=buttons.cancel_kb())
    bot.register_next_step_handler(call.message, send_promo, user_id, admin_id)


def save_user_to_excel(user_id, username):
    if not os.path.exists(excel_file_path):
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª Excel –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        wb = openpyxl.Workbook()
        ws = wb.active
        ws.append(['User ID', 'Username', ])
    else:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª Excel
        wb = openpyxl.load_workbook(excel_file_path)
        ws = wb.active

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Excel
    ws.append([user_id, username])

    # –ü–æ–ª—É—á–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    max_username_length = max(len(row[1].value) for row in ws.iter_rows(min_row=2, max_row=ws.max_row))

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç–æ–ª–±—Ü–∞ "Username" –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã –∏–º–µ–Ω–∏
    ws.column_dimensions['B'].width = max_username_length + 2  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–º–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –¥–ª—è –æ—Ç—Å—Ç—É–ø–∞

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    wb.save(excel_file_path)


def send_info_to_group(user_id, username, phone_number, photo):
    bot.send_photo(-4013840171, photo=photo, caption=f"<b>–ò–º—è üë§</b>: {username}\n"
                                                     f"<b>ID üÜî</b>: {user_id}\n"
                                                     f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üìû</b>: {phone_number}",
                   parse_mode="html")


def send_excel_report_to_group():
    if os.path.exists(excel_file_path):
        today = datetime.date.today()
        last_modified = datetime.date.fromtimestamp(os.path.getmtime(excel_file_path))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —Ñ–∞–π–ª –∏–∑–º–µ–Ω–µ–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
        if (today - last_modified).days <= 30:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ –æ—Ç—á–µ—Ç —Å–µ–≥–æ–¥–Ω—è
            if not os.path.exists(last_report_sent_file):
                bot.send_document(-4013840171, open(excel_file_path, 'rb'))
                save_last_report_sent_date(today)


def get_last_report_sent_date():
    if os.path.exists(last_report_sent_file):
        with open(last_report_sent_file, 'r') as file:
            last_report_date = datetime.datetime.strptime(file.read(), '%Y-%m-%d').date()
            return last_report_date
    else:
        return None


def save_last_report_sent_date(date):
    with open(last_report_sent_file, 'w') as file:
        file.write(date.strftime('%Y-%m-%d'))


# –ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç—á–µ—Ç–∞ –∫–∞–∂–¥—ã–µ 30 –¥–Ω–µ–π
send_excel_report_to_group()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()
