import telebot
import buttons
import database
import openpyxl
import datetime
from dotenv import load_dotenv
import os

load_dotenv()

bot = telebot.TeleBot(os.getenv('KEY'))

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É Excel
excel_file_path = 'user_data.xlsx'

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞
last_report_sent_file = 'last_report_sent.txt'


@bot.message_handler(commands=['start'])
def send_number(message):
    user_id = message.from_user.id
    name = message.from_user.username

    if message.contact:
        phone_number = message.contact.phone_number

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Excel
        save_user_to_excel(user_id, name, phone_number)

        bot.send_message(user_id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç–æ–≤–∞—Ä–∞',
                         reply_markup=telebot.types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, send_image, name, phone_number)
    elif not message.contact:
        bot.send_message(user_id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏', reply_markup=buttons.number_buttons())
        bot.register_next_step_handler(message, send_number)


def send_image(message, name, phone_number):
    user_id = message.from_user.id
    if message.photo:
        photo = message.photo[-1].file_id
        bot.send_message(user_id, '–£—Å–ø–µ—à–Ω–æ! –ñ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –Ω–∞—à–∏—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤')

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –≥—Ä—É–ø–ø—É
        send_info_to_group(user_id, name, phone_number, photo)


def send_image(message, name, phone_number):
    user_id = message.from_user.id
    if message.photo:
        photo = message.photo[-1].file_id
        bot.send_message(user_id, '–£—Å–ø–µ—à–Ω–æ! –ñ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –Ω–∞—à–∏—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤')

        posting = bot.send_photo(-4013840171, photo=photo, caption=f"<b>–ò–º—è</b>: {name}\n"
                                                                   f"<b>ID</b>: {user_id}\n"
                                                                   f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>: {phone_number}",
                                 parse_mode="html", reply_markup=buttons.promo_call(user_id))


def send_promo(message, user_id, admin_id):
    if message.from_user.id == admin_id:
        try:
            bot.send_message(user_id, message.text)
            bot.send_message(-4013840171, f"{user_id} –ø–æ–ª—É—á–∏–ª –ø—Ä–æ–º–æ–∫–æ–¥")
        except:
            bot.send_message(-4013840171, f"{user_id} –Ω–µ –ø–æ–ª—É—á–∏–ª –ø—Ä–æ–º–æ–∫–æ–¥")


@bot.callback_query_handler(func=lambda call: True)
def promo(call):
    user_id = int(call.data)
    admin_id = call.from_user.id
    bot.send_message(-4013840171, f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —é–∑–µ—Ä–∞ —Å –∞–π–¥–∏: {user_id}")
    bot.register_next_step_handler(call.message, send_promo, user_id, admin_id)


def save_user_to_excel(user_id, username, phone_number):
    if not os.path.exists(excel_file_path):
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª Excel –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        wb = openpyxl.Workbook()
        ws = wb.active
        ws.append(['User ID', 'Username', 'Phone Number'])
    else:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª Excel
        wb = openpyxl.load_workbook(excel_file_path)
        ws = wb.active

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Excel
    ws.append([user_id, username, phone_number])

    # –ü–æ–ª—É—á–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    max_username_length = max(len(row[1].value) for row in ws.iter_rows(min_row=2, max_row=ws.max_row))

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç–æ–ª–±—Ü–∞ "Username" –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã –∏–º–µ–Ω–∏
    ws.column_dimensions['B'].width = max_username_length + 2  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–º–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –¥–ª—è –æ—Ç—Å—Ç—É–ø–∞

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    wb.save(excel_file_path)


def send_info_to_group(user_id, username, phone_number, photo):
    bot.send_photo(-4013840171, photo=photo, caption=f"<b>–ò–º—è üë§</b>: {username}\n"
                                                     f"<b>ID üÜî</b>: {user_id}\n"
                                                     f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üìû</b>: {phone_number}",
                   parse_mode="html")


def send_excel_report_to_group():
    if os.path.exists(excel_file_path):
        today = datetime.date.today()
        last_modified = datetime.date.fromtimestamp(os.path.getmtime(excel_file_path))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —Ñ–∞–π–ª –∏–∑–º–µ–Ω–µ–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
        if (today - last_modified).days <= 30:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ –æ—Ç—á–µ—Ç —Å–µ–≥–æ–¥–Ω—è
            if not os.path.exists(last_report_sent_file) or (today - get_last_report_sent_date()).days >= 1:
                bot.send_document(-4013840171, open(excel_file_path, 'rb'))
                save_last_report_sent_date(today)


def get_last_report_sent_date():
    if os.path.exists(last_report_sent_file):
        with open(last_report_sent_file, 'r') as file:
            last_report_date = datetime.datetime.strptime(file.read(), '%Y-%m-%d').date()
            return last_report_date
    else:
        return None


def save_last_report_sent_date(date):
    with open(last_report_sent_file, 'w') as file:
        file.write(date.strftime('%Y-%m-%d'))


# –ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏ –æ—Ç—á–µ—Ç–∞ –∫–∞–∂–¥—ã–µ 30 –¥–Ω–µ–π
send_excel_report_to_group()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()
